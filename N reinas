#include <iostream>
#include <vector>
using namespace std;

#define N 4

bool esSeguro(int tablero[N][N], int fila, int col) {
    for (int i = 0; i < col; i++)
        if (tablero[fila][i]) return false;

    for (int i = fila, j = col; i >= 0 && j >= 0; i--, j--)
        if (tablero[i][j]) return false;

    for (int i = fila, j = col; i < N && j >= 0; i++, j--)
        if (tablero[i][j]) return false;

    return true;
}

bool resolverNReinas(int tablero[N][N], int col) {
    if (col >= N) return true;

    for (int i = 0; i < N; i++) {
        if (esSeguro(tablero, i, col)) {
            tablero[i][col] = 1;
            if (resolverNReinas(tablero, col + 1)) return true;
            tablero[i][col] = 0;
        }
    }

    return false;
}

void mostrarTablero(int tablero[N][N]) {
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            cout << (tablero[i][j] ? "Q " : ". ");
        }
        cout << endl;
    }
}

int main() {
    int tablero[N][N] = {0};

    if (!resolverNReinas(tablero, 0)) {
        cout << "No se encontró solución." << endl;
        return 1;
    }

    cout << "Solución al problema de las " << N << " reinas:\n";
    mostrarTablero(tablero);
    return 0;
}
